---
layout: post
title: Advanced in Financial Machine Learning
date: 2020-03-29 19:29:00 +0900
description: You’ll find this post in your `_posts` directory. Go ahead and edit it and re-build the site to see your changes. # Add post description (optional)
img: https://www.hendraoktora.com/blog/wp-content/uploads/2018/11/Codility-znak-tmp-copy-1024x549.png # Add image post (optional)
fig-caption: # Add figcaption (optional)
categories: "Algorithm"
tags: [Coding Test,Codility]
---
## 들어가기 전에
오랜만에 코딩테스트를 치를 기회가 있었다. 알고리즘 준비를 요새 제대로 못해서 살짝 걱정이었는데, 알고리즘 개념을 묻는다기보단 단순 데이터처리에 다행이었다.  
그래도 추후에 본격적으로 기업 코딩테스트에 응시해야 하니, 보완할 점들을 정리하고 계속 준비해 나가야겠다.  
우선 기출문제부터 간단하게 정리하고 가자
## Task1 - 배열내 숫자의 출현빈도
문제  
`자연수 N개가 포함된 배열 A가 있다.`  
`배열 내의 원소 k1,k2,...kN 중에서, 자기자신의 크기만큼만 배열에서 등장하는 원소들을 뽑아낸다.`  
`뽑힌 원소들 중 가장 큰 원소를 반환하는 함수를 작성하여라. 조건을 만족하는 원소가 없는 경우 0을 반환하라`  

예시  
`A = [1,2,2,3,3,3,8]의 경우, 1은 1번, 2는 2번, 3는 3번 등장하므로 조건을 만족되 뽑히게 된다.`  
`이 중 3이 가장 크므로 3을 반환한다. 8은 1번만 등장하므로 조건을 만족하지 않는다`  
`A = [3,4,5]의 경우, 조건을 만족하는 원소가 없으므로 0을 반환한다`  

조건  
`N은 [1,100,000]이내의 범위이다.`  
`A의 원소의 범위는 [1,1,000,000,000]이다`

아이디어  
자연수가 몇번 등장했는지 세는 것이므로, Count 행렬을 만들어서 풀면 매우 쉽다.  
조건에서 A의 원소의 범위가 1,000,000,000이라고 해서 '진짜 10억번 세야 해?'라고 겁먹을 필요 없다.  
어차피 배열의 크기가 100,000까지밖에 안되기 때문에, 10만 이상의 수는 세 볼 필요도 없이 조건을 만족하지 않는다.

풀이

## Task2 - 자리수의 합이 같은 수
문제  
`자연수 N개를 원소로 포함하는 배열 A가 있다.`  
`배열의 원소 중, 자릿수의 합이 동일한 원소를 2개 골라 한 쌍으로 뽑는다`  
`해당 원소 2개를 더해서 나올 수 있는 최대값을 반환하는 함수를 작성하라. 만약 자리수의 합이 같은 원소가 없으면 -1을 반환하라`

예시  
`A = [17,71,51,42]라 하자. 17과 71은 자리수의 합이 8로 같고, 51과 42도 자리수의 합이 6으로 같다.`  
`17과 71을 한 쌍으로 뽑아 더하면 88이 된다`  
`51과 42를 한 쌍으로 뽑아 더하면 93이 된다`  
`51과 71은 자리수의 합이 다르므로 한 쌍으로 뽑을 수 없다`  
`따라서 원소의 합으로 나올 수 있는 최대값은 93이다`  
`B = [15,67,43,63]이라 하자. 자리수의 합은 왼쪽에서부터 각각 6,13,7,9이므로 자리수의 합이 모두 다르다`  
`따라서 -1을 반환한다`


## Task3 - 과수원 나무 높이 문제
문제  
`당신은 과수원을 관리하는 정원사이다. 당신은 정원의 모든 나무들을 aesthetic한 상태로 유지하고 싶다.`  
`aesthetic한 상태란, 아래와 같이 나무들의 높이가 높아졌다 낮아졌다 반복되는 상태이다`  
`aesthetic하지 않은 상태란, 아래와 같이 나무들이 3그루 이상 연속해서 커지거나, 작아지는 상태이다. 또한 같은 높이의 나무들이 이웃해서 서 있는 상태도 aesthetic하지 않은 상태이다.`  
`만약 현재 나무들이 aesthetic하지 않은 상태라면, 당신은 한 그루의 나무를 뽑아내서 aesthetic하게 만들 수 있다.`  
`나무의 높이가 Array로 주어질 때, 한그루의 나무를 뽑아내 aesthetic하게 만들 수 있는 경우의 수의 개수를 반환하는 함수를 작성하라, 만약 어떠한 경우에도 aesthetic하게 만들 수 없다면 -1을 반환하라. 만약 아무 나무도 뽑지 않고 aesthetic한 상태라면 0을 반환하라.`

## Task4 - 사원의 이메일 등록하기
문제  
`당신은 회사에 취직해, 모든 사원들의 이메일을 만들어 주는 일을 맡게 되었다.`  
`회사의 모든 사원의 이름은 First Name, (Optional)Middel Name, Last Name으로 이루어져 있다.`  
`이름은 모두 영어 알파벳이며, 대소문자가 혼용되어 있다. Last Name에는 -(hyphen)이 포함될 수도 있다.`
`이메일을 만드는 규칙은 아래와 같다.`  
    lastname_firstname@회사명.com  
`이메일의 모든 알파벳은 소문자이며, hyphen은 포함되지 않아야 한다`  
`만약 이메일 주소가 중복된다면, 나중에 만들어진 사원의 이메일에 아래와 같이 숫자를 붙인다.`  
    lastname_firstname2@회사명.com  
    lastname_firstname3@회사명.com  
`최종적으로 사원의 원래 이름과 이메일을 합쳐,아래와 같은 문자열로 출력한다`  
    사원명 <이메일>; 사원명 <이메일>; 사원명 <이메일>

## 느낀점1 - 시험환경
백준, SWEA, 프로그래머스로만 응시하다 이번에는 Codility로 응시하게 되었다. 